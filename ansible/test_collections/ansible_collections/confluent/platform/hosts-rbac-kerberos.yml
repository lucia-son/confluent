---
all:
  vars:
    ### ansible
    ansible_connection: ssh
    ansible_user: confluent
    ansible_become: true

    ### os user and group
    archive_owner: confluent
    archive_group: confluent
    zookeeper_user: zookeeper
    zookeeper_group: zookeeper
    kafka_broker_user: kafka
    kafka_broker_group: kafka
    schema_registry_user: confluent
    schema_registry_group: confluent
    kafka_connect_user: confluent
    kafka_connect_group: confluent
    ksql_user: confluent
    ksql_group: confluent
    control_center_user: confluent
    control_center_group: confluent

    ### License Info 
    #confluent_license: <Confluent License Key >
    #kafka_broker_custom_properties:
    #  confluent.license: "{{ confluent_license }}"

    ### confluent kafka
    #custom_java_path: "/usr/lib/jvm/java-11"
    redhat_java_package_name: "openjdk-11-jdk"

    ### package install
    confluent_server_enabled: true
    confluent_package_version: "7.4.1"
    confluent_cli_download_enabled: false
    installation_method: archive
    archive_destination_path: "/engn"
    confluent_archive_file_remote: false
    confluent_archive_file_source: "/home/confluent/install_files/confluent-7.4.1.tar.gz"
    config_prefix: ""
    zookeeper_config_prefix: "/zookeeper"
    kafka_broker_config_prefix: "/kafka"
    kafka_connect_config_prefix: "/connect"
    ksql_config_prefix: "/ksql"
    schema_registry_config_prefix: "/schema-registry"
    control_center_config_prefix: "/control-center"
    zookeeper_keytab_path: "{{ archive_destination_path }}/zookeeper/zookeeper.keytab"
    kafka_broker_keytab_path: "{{ archive_destination_path }}/kafka/kafka.keytab"

    ### deployment strategy
    deployment_strategy: parallel

    ### component cluster group
    kafka_connect_cluster_ansible_group_names:
      - rabc-connect-cluster
    ksql_cluster_ansible_group_names:
      - rabc-ksql
    
    ssl_enabled: false
    sasl_protocol: kerberos 
    kerberos_configure: false

    ### kafka listeners
    kafka_broker_configure_multiple_listeners: true
    kafka_broker_configure_control_plane_listener: true
    kafka_broker_inter_broker_listener_name: broker
    kafka_broker_custom_listeners:
      internal:
        name: INTERNAL
        port: 9091
      client:
        name: CLIENT
        port: 9092
      broker: 
        name: BROKER
        port: 9093
      controller: 
        name: CONTROLLER
        port: 9094
    
    ### RBAC Configuration
    rbac_enabled: true

    ### Enable RBAC centralized MDS with Ansible
    mds_port: 8090
    
    ## LDAP principal for bootstrapping RBAC within Confluent Platform
    mds_super_user: mds_user
    mds_super_user_password: mds1234

    create_mds_certs: false
    token_services_public_pem_file: /home/confluent/keys/public.pem
    token_services_private_pem_file: /home/confluent/keys/tokenKeypair.pem
    
    ## LDAP users for Confluent Platform component 
    kafka_broker_ldap_user: kafka_broker
    kafka_broker_ldap_password: broker123
    schema_registry_ldap_user: schema_registry
    schema_registry_ldap_password: schema123
    kafka_connect_ldap_user: connect_worker
    kafka_connect_ldap_password: connect123
    ksql_ldap_user: ksql
    ksql_ldap_password: ksql123
    control_center_ldap_user: control_center
    control_center_ldap_password: control123

    ### monitoring
    jmxexporter_enabled: false

    ### copy files
    kafka_controller_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/kafka-log4j.properties"
        destination_path: "{{archive_destination_path}}/log4j/kafka-log4j.properties"
    kafka_broker_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/kafka-log4j.properties"
        destination_path: "{{archive_destination_path}}/log4j/kafka-log4j.properties"
    schema_registry_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/schema-registry-log4j.properties"
        destination_path: "{{archive_destination_path}}/log4j/schema-registry-log4j.properties"
    kafka_connect_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/kafka-connect-log4j.properties"
        destination_path: "{{archive_destination_path}}/log4j/kafka-connect-log4j.properties"
    ksql_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/ksqldb-log4j.properties"
        destination_path: "{{archive_destination_path}}/log4j/ksqldb-log4j.properties"
    kafka_rest_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/kafka-rest-log4j.properties"
        destination_path: "{{archive_destination_path}}/log4j/kafka-rest-log4j.properties"
    control_center_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/control-center-log4j.properties"
        destination_path: "{{archive_destination_path}}/log4j/control-center-log4j.properties"

    ### zookeeper
    zookeeper_ssl_enabled: false
    zookeeper_chroot: /confluent
    zookeeper_log_dir: /logs/zookeeper
    zookeeper_service_environment_overrides:
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"
      KAFKA_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      KAFKA_GC_LOG_OPTS: "-Xlog:gc*:file={{zookeeper_log_dir}}/zookeeper-gc.log:time,tags:filecount=7,filesize=100M"
      KAFKA_JMX_OPTS: "-Dzookeeper.kerberos.removeHostFromPrincipal=true -Dzookeeper.kerberos.removeRealmFromPrincipal=true -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/zookeeper/zookeeper-log4j.properties"

    ### kafka
    kafka_broker_log_dir: /logs/kafka
    kafka_broker_service_environment_overrides:
      KAFKA_HEAP_OPTS: "-Xms4g -Xmx4g"
      KAFKA_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      KAFKA_GC_LOG_OPTS: "-Xlog:gc*:file={{kafka_broker_log_dir}}/kafka-gc.log:time,tags:filecount=10,filesize=100M"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/log4j/kafka-log4j.properties"
    kafka_broker_service_overrides:
      SuccessExitStatus: 143

    ### schema registry
    schema_registry_log_dir: /logs/schema-registry
    schema_registry_service_environment_overrides:
      SCHEMA_REGISTRY_HEAP_OPTS: "-Xms512m -Xmx512m"
      SCHEMA_REGISTRY_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      SCHEMA_REGISTRY_GC_LOG_OPTS: "-Xlog:gc*:file={{schema_registry_log_dir}}/schema-registry-gc.log:time,tags:filecount=10,filesize=100M"
      SCHEMA_REGISTRY_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      SCHEMA_REGISTRY_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/log4j/schema-registry-log4j.properties"
    schema_registry_service_overrides:
      SuccessExitStatus: 143

    ### kafka connect
    kafka_connect_log_dir: /logs/kafka-connect
    kafka_connect_service_environment_overrides:
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"
      KAFKA_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      KAFKA_GC_LOG_OPTS: "-Xlog:gc*:file={{kafka_connect_log_dir}}/connect-gc.log:time,tags:filecount=10,filesize=100M"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/log4j/kafka-connect-log4j.properties"
      CLASSPATH: "{{archive_destination_path}}/confluent-{{confluent_package_version}}/share/java/kafka-connect-replicator/*"
    kafka_connect_service_overrides:
      SuccessExitStatus: 143

    ### ksqldb
    ksql_log_dir: /logs/ksqldb
    ksql_service_environment_overrides:
      KSQL_HEAP_OPTS: "-Xms512m -Xmx512m"
      KSQL_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      KSQL_GC_LOG_OPTS: "-Xlog:gc*:file={{ksql_log_dir}}/ksql-server-gc.log:time,tags:filecount=10,filesize=100M"
      KSQL_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/log4j/ksqldb-log4j.properties"
    ksql_service_overrides:
      SuccessExitStatus: 143

    ### control center
    control_center_log_dir: /logs/control-center
    control_center_custom_java_args: "-Xlog:gc*:file={{control_center_log_dir}}/control-center-gc.log:time,tags:filecount=10,filesize=100M"
    control_center_service_environment_overrides:
      CONTROL_CENTER_HEAP_OPTS: "-Xms4g -Xmx4g"
      CONTROL_CENTER_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      CONTROL_CENTER_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      CONTROL_CENTER_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/log4j/control-center-log4j.properties"
    control_center_service_overrides:
      Restart: "no"
      SuccessExitStatus: 143

zookeeper:
  vars:
    zookeeper_custom_properties:
      dataDir: /data/zookeeper
      tickTime: 2000
      initLimit: 5
      syncLimit: 2
      maxClientCnxns: 0
      autopurge.snapRetainCount: 10
      autopurge.purgeInterval: 1
      admin.enableServer: "false"
      4lw.commands.whitelist: ruok,stat,srvr
      quorum.auth.enableSasl: true
      quorum.auth.learnerRequireSasl: true
      quorum.auth.serverRequireSasl: true
      quorum.auth.kerberos.servicePrincipal: zookeeper/_HOST
      quorum.cnxn.threads.size: 20
  hosts:
    tester101.young.com:
      zookeeper_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/zookeeper_tester101.keytab
      zookeeper_kerberos_principal: zookeeper/tester101.young.com@KAFKA.SECURE
      zookeeper_id: 101
    tester102.young.com:
      zookeeper_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/zookeeper_tester102.keytab
      zookeeper_kerberos_principal: zookeeper/tester102.young.com@KAFKA.SECURE
      zookeeper_id: 102
    tester103.young.com:
      zookeeper_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/zookeeper_tester103.keytab
      zookeeper_kerberos_principal: zookeeper/tester103.young.com@KAFKA.SECURE
      zookeeper_id: 103

kafka_broker:
  vars:
    kafka_broker_custom_properties:
      log.dirs: /data/kafka
      log.retention.hours: 168
      log.retention.check.interval.ms: 300000
      log.segment.bytes: 1073741824
      log.cleanup.policy: delete
      num.io.threads: 16
      num.network.threads: 8
      num.partitions: 1
      num.recovery.threads.per.data.dir: 1
      message.max.bytes: 20971760
      default.replication.factor: 3
      min.insync.replicas: 2
      replica.lag.time.max.ms: 30000
      unclean.leader.election.enable: "false"
      auto.create.topics.enable: "false"
      group.initial.rebalance.delay.ms: 3000
      offsets.topic.replication.factor: 3
      transaction.state.log.min.isr: 2
      transaction.state.log.replication.factor: 3
      confluent.balancer.enable: "false"
      confluent.balancer.heal.uneven.load.trigger: ANY_UNEVEN_LOAD 
      confluent.balancer.disk.max.load: 0.85
      confluent.balancer.topic.replication.factor: 3
      confluent.tier.enable: "false"
      zookeeper.set.acl: false
      ldap.search.mode: USERS
      ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
      ldap.java.naming.provider.url: ldap://tester105.young.com:389
      ldap.java.naming.security.principal: cn=mds,dc=young,dc=com
      ldap.java.naming.security.credentials: mds1234
      ldap.java.naming.security.authentication: simple
      ldap.user.search.base: ou=User,dc=young,dc=com
      ldap.group.search.base: ou=Group,dc=young,dc=com
      ldap.user.object.class: inetOrgPerson
      ldap.user.name.attribute: uid
      ldap.user.memberof.attribute.pattern: uid=(.*),ou=User,dc=young,dc=com
      ldap.group.name.attribute: cn
      ldap.group.member.attribute.pattern: uid=(.*),ou=User,dc=young,dc=com
      ldap.group.object.class: group
    
  hosts:
    tester101.young.com:
      kafka_broker_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/kafka_tester101.keytab
      kafka_broker_kerberos_principal: kafka/tester101.young.com@KAFKA.SECURE
      broker_id: 101
      kafka_broker_principal: kafka_broker
    tester102.young.com:
      kafka_broker_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/kafka_tester102.keytab
      kafka_broker_kerberos_principal: kafka/tester102.young.com@KAFKA.SECURE
      broker_id: 102
      kafka_broker_principal: kafka_broker
    tester103.young.com:
      kafka_broker_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/kafka_tester103.keytab
      kafka_broker_kerberos_principal: kafka/tester103.young.com@KAFKA.SECURE
      broker_id: 103
      kafka_broker_principal: kafka_broker
schema_registry:
  vars:
    schema_registry_custom_properties:
      schema.compatibility.level: full
      schema.registry.group.id: rbac-schema-cluster
  hosts:
    tester103.young.com:

kafka_connect:
  children:
    rbac-connect-cluster:
      vars:
        kafka_connect_cluster_name: rbac-connect-cluster
        kafka_connect_group_id: rbac-connect-cluster
        kafka_connect_custom_properties:
          config.storage.topic: rbac-connect-configs
          offset.storage.topic: rbac-connect-offsets
          status.storage.topic: rbac-connect-status
          config.storage.replication.factor: 3
          offset.storage.partitions: 25
          offset.storage.replication.factor: 3
          offset.flush.interval.ms: 10000
          status.storage.partitions: 5
          status.storage.replication.factor: 3
          connector.client.config.override.policy: All
        kafka_connect_custom_rest_extension_classes:
          - io.confluent.connect.replicator.monitoring.ReplicatorMonitoringExtension
      hosts:
        tester104.young.com:

ksql:
  children:
    rbac-ksql:
      vars:
        ksql_cluster_name: rbac-ksql
        ksql_service_id: rbac.ksql_
        ksql_custom_properties:
          ksql.streams.state.dir: /data/ksqldb
      hosts:
        tester102.young.com:

control_center:
  vars:
    custom_java_path: "/usr/lib/jvm/java-11-openjdk-11.0.19.0.7-1.el7_9.x86_64"
    control_center_custom_properties:
      schema.registry.url: "http://tester103.young.com:8081"
      confluent.controlcenter.data.dir: /data/control-center
      confluent.controlcenter.command.topic: _confluent-command
      confluent.controlcenter.command.topic.replication: 3
      confluent.controlcenter.internal.topics.partitions: 12
      confluent.controlcenter.internal.topics.replication: 3
      confluent.metrics.topic: _confluent-metrics
      confluent.metrics.topic.partitions: 12
      confluent.metrics.topic.replication: 3
      confluent.controlcenter.streams.num.stream.threads: 16
      confluent.controlcenter.ui.autoupdate.enable: "false"
      confluent.controlcenter.ui.controller.chart.enable: "true"
      confluent.controlcenter.usage.data.collection.enable: "false"
      confluent.controlcenter.id: rabc
      confluent.controlcenter.name: rabc
  hosts:
    tester105.young.com:
